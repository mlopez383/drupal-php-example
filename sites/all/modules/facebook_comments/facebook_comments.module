<?php

/**
 * Implementation of hook_permission(). 
 */
function facebook_comments_permission() {
  return array(
    'administer facebook comments' => array(
      'title' => t('Administer facebook comments'), 
      'description' => t('Perform administration tasks for facebook comments module.'),
    ),
  );
}

/**
 * Implementation of hook_menu().
 */
function facebook_comments_menu() {
  $items['admin/config/services/facebook-comments'] = array(
    'title' => 'Facebook Comments',
    'description' => 'Administer facebook comments module.',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('facebook_comments_admin_settings'),
	  'access arguments' => array('administer facebook comments'),
    'type' => MENU_NORMAL_ITEM,
  );
  return $items;
}

/**
 * Implementation of system_settings_form().
 */
function facebook_comments_admin_settings($form, $form_state) {

  $nodeTypes = node_type_get_types();
  $options = array();
  foreach ($nodeTypes as $k => $v) {
    $options[$k] = $v->name;    
  }
  $form['facebook_comments_nodes'] = array(
    '#type' => 'checkboxes',
    '#title' => t('Content Types'),
    '#description' => t('Which content types to enable the facebook comments for.'),
    '#default_value' => variable_get('facebook_comments_nodes', array()), 
    '#options' => $options,
  );

  $form['facebook_comments_number'] = array(
    '#type' => 'textfield',
    '#title' => t('Number of Comments'),
    '#description' => t('The number of comments to display.'),
    '#default_value' => variable_get('facebook_comments_number', 10), 
  );

  $form['facebook_comments_width'] = array(
    '#type' => 'textfield',
    '#title' => t('Comments Width (px)'),
    '#description' => t('The width of the comments iframe in PX'),
    '#default_value' => variable_get('facebook_comments_width', 700), 
  );

  $form['facebook_comments_style'] = array(
    '#type' => 'select',
    '#title' => t('Color Scheme'),
    '#default_value' => variable_get('facebook_comments_style', array('light' => 'Light', 'dark' => 'Dark')), 
    '#options' => array('light' => 'Light', 'dark' => 'Dark'),
  );
   
  return system_settings_form($form);
}

/**
 * Implementation of hook_node_view(). 
 */
function facebook_comments_node_view($node, $view_mode = 'full', $langcode = NULL){

  $contentTypes = variable_get('facebook_comments_nodes', array());
  
  if(isset($contentTypes[$node->type]) && $contentTypes[$node->type] != null && $view_mode == 'full' && !empty($node->content['comments'])){
    
    //get the page URL
    global $base_url;
    $url = urlencode($base_url.'/node/'.$node->nid);
    $decoded = urldecode($url);
    
    //get facebook comments  for this 
    $output = "<div id='comments'><div id='fb-root'></div><script src='http://connect.facebook.net/en_US/all.js#xfbml=1'></script><fb:comments href='".$url."' num_posts='".variable_get('facebook_comments_number', 10)."' width='".variable_get('facebook_comments_width', 700)."' data-colorscheme='".variable_get('facebook_comments_style', array('light' => 'Light', 'dark' => 'Dark'))."'></fb:comments></div>";      
    $node->content['comments'] = array(
      '#markup' => $output,
      '#weight' => 20,
    );

    //update the comment count for the page
    $json = json_decode(file_get_contents('https://graph.facebook.com/?ids=' . $url));    
    isset($json->$decoded->comments) ? $comment_count = $json->$decoded->comments : $comment_count = 0;
    if($comment_count != $node->comment_count) {
      $record = array(
        'nid' => $node->nid,
        'comment_count' => $comment_count,
      );
      drupal_write_record('node_comment_statistics', $record, 'nid');
    }
  }   
}

